plugins {
    id 'java'
    id 'maven-publish'
    id 'io.freefair.lombok' version '8.0.1'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.1.3'
    id 'idea'
    id 'eclipse'
}
ext {
    serenityVersion = '3.6.21'
    cucumberVersion = '7.18.0'
}

group = 'org.nttdata'
version = '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven {
        url "https://repo.maven.apache.org/maven2/"
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'io.github.navidjalali:firebaseauth_2.13:0.0.4'
    testImplementation(platform("org.junit:junit-bom:5.9.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")

    implementation 'ch.qos.logback:logback-classic:1.4.7'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    implementation 'org.slf4j:slf4j-log4j12:2.0.7'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.projectlombok:lombok:1.18.20'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    implementation 'net.serenity-bdd:serenity-core:4.1.3'
    implementation 'net.serenity-bdd:serenity-junit:4.1.3'
    implementation 'net.serenity-bdd:serenity-screenplay:4.1.3'
    implementation 'net.serenity-bdd:serenity-screenplay-webdriver:4.1.3'
    implementation 'net.serenity-bdd:serenity-cucumber:4.1.3'
    implementation 'net.serenity-bdd:serenity-model:4.1.3'
    implementation 'net.serenity-bdd:serenity-screenplay-rest:4.1.3'
    implementation 'net.serenity-bdd:serenity-rest-assured:4.1.3'
    implementation 'net.serenity-bdd:serenity-ensure:4.1.3'

    implementation 'io.cucumber:cucumber-java:7.18.0'
    implementation 'io.cucumber:cucumber-core:7.18.0'
    implementation 'io.cucumber:cucumber-testng:7.18.0'
    implementation 'io.cucumber:cucumber-gherkin:7.18.0'
    testImplementation 'io.cucumber:cucumber-junit:7.18.0'

    testImplementation 'org.awaitility:awaitility:4.1.0'

    implementation group: 'me.jvt.cucumber', name: 'reporting-plugin', version: '7.11.0'
    implementation 'com.microsoft.sqlserver:mssql-jdbc:12.2.0.jre11'
    implementation 'org.apache.poi:poi-ooxml:5.2.2'
    implementation 'org.apache.poi:poi:5.2.2'
    implementation 'com.itextpdf:itextpdf:5.5.13.3'
    implementation 'org.hibernate:hibernate-core:5.4.33.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.4.33.Final'
    implementation group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: '6.2.3.Final', ext: 'pom'
    implementation 'org.json:json:20230227'
    implementation 'org.jasypt:jasypt:1.9.0'
    implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.springframework:spring-beans:5.1.2.RELEASE'
    implementation 'org.mongodb:mongodb-driver-sync:4.4.0'
    implementation 'mysql:mysql-connector-java:8.0.32'
    implementation 'com.google.firebase:firebase-admin:7.1.1'

    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
}
publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
task cleanResources(type: Delete){
    delete "${rootDir}/build/resources"
    delete "${rootDir}/target/"
    delete 'target'
    println "Eliminando archivos target y build resources"
}

serenity {
    testRoot = ""
    requirementsDir = "src/test/resources/features"
}

task cucumberTest(type: Test) {
    description = "Execute cucumber BDD tests."
    group = "verification"
    testLogging {
        events "passed", "skipped", "failed"
        options {
            showStandardStreams = true
        }
    }
    jvmArgs = ['-Xmx2048m']
    systemProperties System.getProperties()
    systemProperty 'logback.configurationFile', '${projectDir}/test/resources/logback-test.xml'
    systemProperty 'lombok.log.filedName', 'log'
    systemProperty 'cucumber.options', '--plugin pretty --plugin json:build/reports/report.json --plugin html:build/reports/cucumber-reports.html'
}

configurations.all {
    exclude module: 'slf4j-log4j12'
}
cucumberTest.finalizedBy(aggregate)
gradle.startParameter.continueOnFailure = true

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}